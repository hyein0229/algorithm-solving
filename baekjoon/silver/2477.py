import sys
input = sys.stdin.readline
'''
문제: 2477 참외밭
난이도: Silver 2
알고리즘: 구현, 수학
풀이 방법: 그림을 보면 가장 큰 사각형 넓이에서 작은 사각형의 넓이를 빼면 참외밭의 넓이를 구할 수 있다는 것은 쉽게 생각할 수 있다.
        작은 사각형의 세로, 가로 변 길이를 어떻게 구할 것인지를 생각하는 것이 가장 관건인 것 같다.
        작은 사각형의 세로, 가로변 길이는 가장 긴 가로변, 세로변의 양쪽 변의 차이를 통해 구할 수 있다.
        입력은 반시계 방향 순서대로 변의 길이가 입력되기 때문에 가장 긴 변의 인덱스의 -1, 1 인덱스가 양쪽 연결된 변을 의미한다.
        주의할 것은 만약 해당 변의 인덱스가 0이면 양쪽 연결된 변의 인덱스는 5, 1이 되기 때문에 예외처리를 해주어야 하는 것이다.
        다른 분의 코드를 참고했을 때 가장 간단했던 코드는 모듈러 연산을 사용하는 것이었다.
        음수의 나머지 연산 결과 -1 % 6 = 5 이다.
'''
k = int(input())
max_h, h_idx = 0, 0 # 큰 사각형의 세로변
max_w, w_idx = 0, 0 # 큰 사각형의 가로변
# 육각형 참외밭
arr = []
for i in range(6):
    d, l = map(int, input().split())
    if d <= 2:
        if l > max_w: # 가장 긴 가로변
            max_w = l
            w_idx = i
    else: 
        if l > max_h: # 가장 긴 세로변
            max_h = l
            h_idx = i
    arr.append((d, l))

# 작은 사각형의 세로변과 가로변 구하기
# 작은 사각형의 세로변 = 큰 사각형의 가로변에 붙어있는 양쪽 세로변의 차이
# 작은 사각형의 가로변 = 큰 사각형의 세로변에 붙어있는 양쪽 가로변의 차이
sw = abs(arr[(h_idx - 1) % 6][1] - arr[(h_idx + 1) % 6][1])
sh = abs(arr[(w_idx - 1) % 6][1] - arr[(w_idx + 1) % 6][1])
ans = ((max_h * max_w) - (sw * sh)) * k
print(ans)